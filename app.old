from flask import Flask, jsonify, request
from flask_jwt_extended import (
    JWTManager, create_access_token, jwt_required, get_jwt_identity
)

app = Flask(__name__)

# Configuring the secret key for JWT
app.config["JWT_SECRET_KEY"] = "your_jwt_secret_key"
jwt = JWTManager(app)

# Dummy user database
users = {
    "user1": {"password": "password123"},
    "user2": {"password": "mypassword"}
}

@app.route("/login", methods=["POST"])
def login():
    # Get username and password from the request
    data = request.json
    username = data.get("username")
    password = data.get("password")

    # Verify user credentials
    if username in users and users[username]["password"] == password:
        # Create an access token
        access_token = create_access_token(identity=username)
        return jsonify(access_token=access_token), 200
    return jsonify({"msg": "Invalid credentials"}), 401

@app.route("/protected", methods=["GET"])
@jwt_required()
def protected():
    # Get the identity of the current user
    current_user = get_jwt_identity()
    return jsonify(logged_in_as=current_user), 200

@app.route("/")
def home():
    return jsonify({"msg": "Welcome to the Flask JWT Example!"})

if __name__ == "__main__":
    app.run(debug=True)
